# 짝수인 경우
# -> 딱 반을 채우는 경우의 수를 생각하자. ( 나머지 반이 알아서 대칭으로 들어갈 것 )
# -> 반을 채울 때에 가운데에 2*2 타일이 들어가거나 2*1 타일이 들어갈 수 있다.
# -> dp[n//2] + 2 * dp[(n-2)//2]
# 홀수인 경우
# -> 정가운데에 1*2 타일이 들어가고 나머지 반을 채운다고 생각하자.
# -> dp[(n-1)//2]

# 최종적으로
# -> 기본 값인 ( dp[n] + 위의 값 ) // 2 를 통해 답을 도출할 수 있다. -> 위의 값이 대칭인 경우를 모두 구한 것이기 때문에 안겹칠것임.

N = int(input())
dp = [1, 1]
if N > 1:
    for i in range(2, N+1):
        dp.append(dp[i-1] + 2 * dp[i-2])

if N % 2 == 0:
    print((dp[N] + dp[N//2] + 2 * dp[(N-2)//2])//2)
else:
    print((dp[N] + dp[(N-1)//2])//2)